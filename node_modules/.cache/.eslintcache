[{"/Users/manojshakya/Documents/open-source-assessment-tool/src/index.js":"1","/Users/manojshakya/Documents/open-source-assessment-tool/src/App.js":"2","/Users/manojshakya/Documents/open-source-assessment-tool/src/reportWebVitals.js":"3","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestOne.js":"4","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwo.js":"5","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFour.js":"6","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestThree.js":"7","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Layout/index.js":"8","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/NoPage/index.js":"9","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Scoreboard/index.js":"10","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Home/index.js":"11","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/LayOut.js":"12","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFive.js":"13","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSix.js":"14","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSeven.js":"15","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEight.js":"16","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestNine.js":"17","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTen.js":"18","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEleven.js":"19","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwelve.js":"20","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestThirteen.js":"21","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFourteen.js":"22","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFifteen.js":"23","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSixteen.js":"24","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSeventeen.js":"25","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEighteen.js":"26","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestNineteen.js":"27","/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwenty.js":"28","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/index.js":"29","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/App.js":"30","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/reportWebVitals.js":"31","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSeven.js":"32","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFour.js":"33","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestThree.js":"34","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestOne.js":"35","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwo.js":"36","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/LayOut.js":"37","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSix.js":"38","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTen.js":"39","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestNine.js":"40","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEight.js":"41","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Home/index.js":"42","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Layout/index.js":"43","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/NoPage/index.js":"44","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Scoreboard/index.js":"45","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFive.js":"46","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEleven.js":"47","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwelve.js":"48","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestThirteen.js":"49","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFourteen.js":"50","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFifteen.js":"51","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSixteen.js":"52","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSeventeen.js":"53","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEighteen.js":"54","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestNineteen.js":"55","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwenty.js":"56"},{"size":521,"mtime":1686980094498,"results":"57","hashOfConfig":"58"},{"size":1889,"mtime":1690257069681,"results":"59","hashOfConfig":"58"},{"size":362,"mtime":1686978653310,"results":"60","hashOfConfig":"58"},{"size":3573,"mtime":1690170392548,"results":"61","hashOfConfig":"58"},{"size":3256,"mtime":1690170439484,"results":"62","hashOfConfig":"58"},{"size":3418,"mtime":1690186666111,"results":"63","hashOfConfig":"58"},{"size":3300,"mtime":1690020204987,"results":"64","hashOfConfig":"58"},{"size":258,"mtime":1686980094497,"results":"65","hashOfConfig":"58"},{"size":72,"mtime":1686980094497,"results":"66","hashOfConfig":"58"},{"size":10538,"mtime":1690019270585,"results":"67","hashOfConfig":"58"},{"size":963,"mtime":1689930476836,"results":"68","hashOfConfig":"58"},{"size":458,"mtime":1686983635478,"results":"69","hashOfConfig":"58"},{"size":3339,"mtime":1690186795274,"results":"70","hashOfConfig":"58"},{"size":3333,"mtime":1690187681713,"results":"71","hashOfConfig":"58"},{"size":3276,"mtime":1690187818085,"results":"72","hashOfConfig":"58"},{"size":3357,"mtime":1690257695285,"results":"73","hashOfConfig":"58"},{"size":3258,"mtime":1690257721086,"results":"74","hashOfConfig":"58"},{"size":3358,"mtime":1690257822818,"results":"75","hashOfConfig":"58"},{"size":3297,"mtime":1690257901262,"results":"76","hashOfConfig":"58"},{"size":3300,"mtime":1690257915847,"results":"77","hashOfConfig":"58"},{"size":3459,"mtime":1690257929297,"results":"78","hashOfConfig":"58"},{"size":3452,"mtime":1690257943650,"results":"79","hashOfConfig":"58"},{"size":3427,"mtime":1690257953852,"results":"80","hashOfConfig":"58"},{"size":3440,"mtime":1690257964652,"results":"81","hashOfConfig":"58"},{"size":3455,"mtime":1690257976235,"results":"82","hashOfConfig":"58"},{"size":3327,"mtime":1690257987219,"results":"83","hashOfConfig":"58"},{"size":3318,"mtime":1690258015929,"results":"84","hashOfConfig":"58"},{"size":3505,"mtime":1690260595563,"results":"85","hashOfConfig":"58"},{"size":521,"mtime":1686980094498,"results":"86","hashOfConfig":"87"},{"size":1889,"mtime":1690257069681,"results":"88","hashOfConfig":"87"},{"size":362,"mtime":1686978653310,"results":"89","hashOfConfig":"87"},{"size":3276,"mtime":1690187818085,"results":"90","hashOfConfig":"87"},{"size":3418,"mtime":1690186666111,"results":"91","hashOfConfig":"87"},{"size":3300,"mtime":1690020204987,"results":"92","hashOfConfig":"87"},{"size":3573,"mtime":1690170392548,"results":"93","hashOfConfig":"87"},{"size":3256,"mtime":1690170439484,"results":"94","hashOfConfig":"87"},{"size":458,"mtime":1686983635478,"results":"95","hashOfConfig":"87"},{"size":3333,"mtime":1690187681713,"results":"96","hashOfConfig":"87"},{"size":3358,"mtime":1690257822818,"results":"97","hashOfConfig":"87"},{"size":3258,"mtime":1690257721086,"results":"98","hashOfConfig":"87"},{"size":3357,"mtime":1690257695285,"results":"99","hashOfConfig":"87"},{"size":963,"mtime":1689930476836,"results":"100","hashOfConfig":"87"},{"size":258,"mtime":1686980094497,"results":"101","hashOfConfig":"87"},{"size":72,"mtime":1686980094497,"results":"102","hashOfConfig":"87"},{"size":10538,"mtime":1690019270585,"results":"103","hashOfConfig":"87"},{"size":3339,"mtime":1690186795274,"results":"104","hashOfConfig":"87"},{"size":3297,"mtime":1690257901262,"results":"105","hashOfConfig":"87"},{"size":3300,"mtime":1690257915847,"results":"106","hashOfConfig":"87"},{"size":3459,"mtime":1690257929297,"results":"107","hashOfConfig":"87"},{"size":3452,"mtime":1690257943650,"results":"108","hashOfConfig":"87"},{"size":3427,"mtime":1690257953852,"results":"109","hashOfConfig":"87"},{"size":3440,"mtime":1690257964652,"results":"110","hashOfConfig":"87"},{"size":3455,"mtime":1690257976235,"results":"111","hashOfConfig":"87"},{"size":3327,"mtime":1690257987219,"results":"112","hashOfConfig":"87"},{"size":3318,"mtime":1690258015929,"results":"113","hashOfConfig":"87"},{"size":3505,"mtime":1690260595563,"results":"114","hashOfConfig":"87"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1chpi5e",{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d2258r",{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},"/Users/manojshakya/Documents/open-source-assessment-tool/src/index.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/App.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/reportWebVitals.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestOne.js",["304","305"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwo.js",["306"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFour.js",["307"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestThree.js",["308"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Layout/index.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/NoPage/index.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Scoreboard/index.js",["309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Home/index.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/LayOut.js",[],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFive.js",["329"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSix.js",["330","331"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSeven.js",["332"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEight.js",["333","334","335"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestNine.js",["336"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTen.js",["337","338"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEleven.js",["339"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwelve.js",["340"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestThirteen.js",["341","342","343"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFourteen.js",["344","345","346"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestFifteen.js",["347","348","349"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSixteen.js",["350","351","352"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestSeventeen.js",["353","354","355"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestEighteen.js",["356"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestNineteen.js",["357"],[],"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwenty.js",["358","359","360","361"],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/index.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/App.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/reportWebVitals.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSeven.js",["362"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestEight from \"./TestEight\";\nimport TestSix from \"./TestSix\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestSeven = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [testSevenView, setTestSevenView] = useState(view);\n\n  const handleSevenAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"7\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"7\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestSevenView(8)\n      }\n      else {\n         setTestSevenView(6)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (testSevenView === 7) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Identify bigger number</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"7\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleSevenAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (testSevenView === 8) {\n    return <TestEight allAnswer={Question} view={8} />;\n  } \n  else if (testSevenView === 6) {\n    return <TestSix allAnswer={Question} view={6} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestSeven;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFour.js",["363"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestThree from \"./TestThree\";\nimport LayOut from \"./LayOut\";\nimport TestFive from \"./TestFive\";\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestFour = ({ allAnswer, view }) => {\n  console.log(allAnswer, view);\n  const [question, setQuestion] = useState(allAnswer);\n  const [testFourView, setTestFourView] = useState(view);\n\n  const handleFourAnswerChange = (e, option) => {\n    console.log(option,\"%%%%%\")\n    let newFourQuestion = [...question];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    console.log(\"$$$$\",newFourQuestion)\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === \"4\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = question;\n      const count = newFourQuestion.reduce((count, question) => {\n        if (question.LevelNumber === \"4\" && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        // alert(\"Congraulations All Level Passed\")\n        setTestFourView(5)\n      }\n      else {\n        setTestFourView(3)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n\n   if (testFourView === 4) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Identify smaller number</span>\n            </div>\n           { console.log(question) }\n            {question.map((option, index) =>\n              option.LevelNumber === \"4\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleFourAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (testFourView === 5) {\n    return <TestFive allAnswer={question} view={5} />;\n  } \n  else if (testFourView === 3) {\n    return <TestThree allAnswer={question} view={3} />;\n  } \n  else {\n    return null;\n   }\n};\n\nexport default TestFour;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestThree.js",["364"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestTwo from \"./TestTwo\";\nimport LayOut from \"./LayOut\";\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestThree = ()=> {\n  const [question, setQuestion] = useState(Questions);\n  const [view, setView] = useState(3);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === \"3\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = question;\n      const count = newThreeQuestion.reduce((count, question) => {\n        if (question.LevelNumber === \"3\" && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setView(4)\n      }\n      else {\n         setView(2);\n      }\n      setQuestion(newThreeQuestion);\n      console.log(newThreeQuestion)\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n\n   if (view === 3) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : What come before</span>\n            </div>\n            {console.log(question)}\n            {question.map((option, index) =>\n              option.LevelNumber === \"3\"? (\n                <div className=\"qus\" key={option.CorrectAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (view === 4) {\n    return <TestFour allAnswer={question} view={4} />;\n  } \n  else if (view === 2) {\n    return <TestTwo allAnswer={question} view={2} />;\n  } else {\n    return null;\n }\n};\n\nexport default TestThree;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestOne.js",["365","366"],[],"import React, { useState } from \"react\";\nimport \"../../Css/style.css\";\nimport TestTwo from \"./TestTwo\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport LayOut from \"./LayOut\";\nconst TestOne = ({ allAnswer, view }) => {\n  console.log(allAnswer)\n  const [question, setQuestion] = useState(allAnswer);\n  const [viewZero, setViewZreo] = useState(view);\n\n  const containerOneStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gap: \"0.1rem\",\n  };\n\n  const handleOneAnswerClick = (e, a1, option) => {\n    let newOneQuestion = question;\n    newOneQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newOneQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      \n    });\n\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n  const handleOneSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === \"1\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newOneQuestion = question;\n      const count = newOneQuestion.reduce((count, question) => {\n        if (question.LevelNumber === \"1\" && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setViewZreo(2)\n      }\n      else {\n        setViewZreo(0)\n      }\n\n      setQuestion(newOneQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n\n\n\n   if (viewZero === 1) {\n    return (\n      <>\n       <LayOut />\n       \n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Count and write</span>\n            </div>\n            {question.map((option, index) =>\n              option.LevelNumber === \"1\" ? (\n                <div className=\"qus\" key={option.CorrectAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber}</span>\n                  <div className=\"text-center\">\n                    <img\n                      className=\"test2-img mt-2\"\n                      width=\"300\"\n                      height=\"200\"\n                      src={process.env.PUBLIC_URL + option.Question}\n                     \n                    />\n                  </div>\n                  <div style={containerOneStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleOneAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleOneSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n       \n      </>\n    );\n  } else if (viewZero === 2) {\n    return <TestTwo allAnswer={allAnswer} view={2} />;\n  } else if (viewZero === 0) {\n    return <Scoreboard allAnswer={allAnswer} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestOne;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwo.js",["367"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport TestOne from \"./TestOne\";\nimport LayOut from \"./LayOut\";\nimport TestThree from \"./TestThree\";\nconst TestTwo = ({ allAnswer, view }) => {\n  console.log(allAnswer)\n  const [question, setQuestion] = useState(allAnswer);\n  const [testtwoView, setTestTwoView] = useState(view);\n\n  const containerTwoStyle = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: '0.1rem',\n  };\n  const handleTwoAnswerClick = (e, a1, option) => {\n    let newTwoQuestion = question;\n\n    newTwoQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n\n      }\n    });\n    setQuestion(newTwoQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n  const handleTwoSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === \"2\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newTwoQuestion = question;\n      const count = newTwoQuestion.reduce((count, question) => {\n        if (question.LevelNumber === \"2\" && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestTwoView(3)\n      }\n      else {\n        setTestTwoView(1)\n      }\n\n      setQuestion(newTwoQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n   if (testtwoView === 2) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : What comes after</span>\n            </div>\n            {question.map((option, index) =>\n              option.LevelNumber === \"2\" ? (\n                <div className=\"qus\" key={option.CorrectAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerTwoStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleTwoAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleTwoSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (testtwoView === 3) {\n    return <TestThree allAnswer={question} view={3} />;\n  } else if (testtwoView === 1) {\n    return <TestOne allAnswer={question} view={1} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestTwo;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/LayOut.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSix.js",["368","369"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFive from \"./TestFive\";\nimport TestSeven from \"./TestSeven\";\nimport LayOut from \"./LayOut\";\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestSix = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestSixView, setTestSixView] = useState(view);\n\n  const handleSixAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"6\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"6\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestSixView(7)\n      }\n      else {\n         setTestSixView(5);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestSixView === 6) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : What come before</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"6\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleSixAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (TestSixView === 7) {\n    return <TestSeven allAnswer={Question} view={7} />;\n  } \n  else if (TestSixView === 5) {\n    return <TestFive allAnswer={Question} view={5} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestSix;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTen.js",["370","371"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestEleven from \"./TestEleven\";\nimport LayOut from \"./LayOut\";\nimport TestNine from './TestNine';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestTen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(Questions);\n  const [TestTenView, setTestTenView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"10\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"10\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestTenView(11)\n      }\n      else {\n         setTestTenView(9);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestTenView === 10) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Expanded form (3 digit)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"10\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (TestTenView === 11) {\n    return <TestEleven allAnswer={Question} view={11} />;\n  } \n  else if (TestTenView === 9) {\n    return <TestNine allAnswer={Question} view={9} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestTen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestNine.js",["372"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestTen from \"./TestTen\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\nimport TestEight from \"./TestEight\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestNine = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [testNineView, setTestNineViewView] = useState(view);\n\n  const handleNineAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"9\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"9\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestNineViewView(10)\n      }\n      else {\n         setTestNineViewView(8)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (testNineView === 9) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Multiplication Facts (6-10) (H)</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"9\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleNineAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (testNineView === 10) {\n    return <TestTen allAnswer={Question} view={10} />;\n  } \n  else if (testNineView === 8) {\n    return <TestEight allAnswer={Question} view={8} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestNine;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEight.js",["373","374","375"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestNine from \"./TestNine\"\nimport LayOut from \"./LayOut\";\nimport TestSeven from './TestSeven';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestEight = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestEightView, setTestEightView] = useState(view);\n\n  const handleEightAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"8\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"8\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestEightView(9)\n      }\n      else {\n         setTestEightView(7);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestEightView === 8) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Add or Subtract</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"8\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleEightAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (TestEightView === 9) {\n    return <TestNine allAnswer={Question} view={9} />;\n  } \n  else if (TestEightView === 7) {\n    return <TestSeven allAnswer={Question} view={7} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestEight;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Home/index.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Layout/index.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/NoPage/index.js",[],[],"/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Scoreboard/index.js",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],[],"import React from 'react';\nimport '../../Css/style.css';\nimport logo from '../../assets/Saarthi-blue.png';\nconst Scoreboard = ({ allAnswer }) => {\nconsole.log(allAnswer)\n\n  const level1 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"1\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l1\",level1)\n  const level2 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"2\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l2\",level2)\n\n  const level3 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"3\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l3\",level3)\n\n  const level4 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"4\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  console.log(\"l4\",level4)\n\n  const level5 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"5\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  console.log(\"l5\",level5)\n\n  const level6 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"6\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  console.log(\"l6\",level6)\n\n  const level7 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"7\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l7\",level7)\n\n  const level8 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"8\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l8\",level8)\n\n  const level9 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"9\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  console.log(\"l9\",level9)\n\n  const level10 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"10\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\n  console.log(\"l10\",level10)\n\n  const level11 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"11\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l11\",level11)\n\n  const level12= allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"12\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l12\",level12)\n\n  const level13 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"13\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l13\",level13)\n\n  const level14 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"14\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l14\",level14)\n\n  const level15 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"15\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l15\",level15)\n\n  const level16 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"16\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l16\",level16)\n\n  const level17 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"17\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l17\",level17)\n\n  const level18 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"18\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l18\",level18)\n\n  const level19 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"19\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l19\",level19)\n\n  const level20 = allAnswer.reduce((count, question) => {\n    if (question.LevelNumber === \"20\" && question.status === 1) {\n\n      return count + 1;\n    }\n    return count;\n  }, 0);\nconsole.log(\"l20\",level20)\n\n  const handleSubmit = () => {\n    window.location.reload();\n    window.location = \"/\"\n  }\n  return (\n    <>\n      <div className=\"form-group1\">\n        <img className=\"img\" src={logo} alt=\"Company Logo\" />\n      </div>\n      <div className=\"container\">\n\n\n        <div className=\"main\">\n          <div className=\"span\"><span className=\"s1\">Scoreboard</span></div>\n          <div className=\"form-group3\">\n            <div className=\"qus-1\">\n              <div className=\"text-center\">\n                <table className=\"table table-bordered\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">Level</th>\n                      <th scope=\"col\">Correct Answers</th>\n                      <th scope=\"col\">Total Questions</th>\n\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {level1 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 1</th>\n                        <td>{level1}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                    {level2 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 2</th>\n                        <td>{level2}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                    {level3 != '' ? <tr>\n                      <th scope=\"row\">Level 3</th>\n                      <td>{level3}</td>\n                      <td>10</td>\n                    </tr> : \"\"}\n                    {level4 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 4</th>\n                        <td>{level4}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                       {level5 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 5</th>\n                        <td>{level5}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                       {level6 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 6</th>\n                        <td>{level6}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level7 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 7</th>\n                        <td>{level7}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level8 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 8</th>\n                        <td>{level8}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level9 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 9</th>\n                        <td>{level9}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level10 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 10</th>\n                        <td>{level10}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level11 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 11</th>\n                        <td>{level11}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level12 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 12</th>\n                        <td>{level12}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level13 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 13</th>\n                        <td>{level13}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level14 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 14</th>\n                        <td>{level14}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level15 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 15</th>\n                        <td>{level15}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level16 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 16</th>\n                        <td>{level16}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level17 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 17</th>\n                        <td>{level17}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level18 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 18</th>\n                        <td>{level18}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level19 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 19</th>\n                        <td>{level19}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                      {level20 != '' ?\n                      <tr>\n                        <th scope=\"row\">Level 20</th>\n                        <td>{level20}</td>\n                        <td>10</td>\n                      </tr>\n                      : \"\"}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className=\"text-center\">\n              <button className=\"button-sub\"\n                onClick={handleSubmit}>Go Back</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport default Scoreboard;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFive.js",["396"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestSix from \"./TestSix\";\nimport LayOut from \"./LayOut\";\nimport TestFour from \"./TestFour\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestFive = ({ allAnswer, view }) => {\n  console.log(allAnswer, view);\n  const [question, setQuestion] = useState(allAnswer);\n  const [TestFiveView, setTestFiveView] = useState(view);\n\n  const handleFiveAnswerChange = (e, option) => {\n    let newFourQuestion = [...question];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFiveSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === \"5\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = question;\n      const count = newFourQuestion.reduce((count, question) => {\n        if (question.LevelNumber === \"5\" && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        // alert(\"Congraulations All Level Passed\")\n        setTestFiveView(6)\n      }\n      else {\n        setTestFiveView(4)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n\n   if (TestFiveView === 5) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Identify bigger number</span>\n            </div>\n           { console.log(question) }\n            {question.map((option, index) =>\n              option.LevelNumber === \"5\" ? (\n                <div className=\"qus\">\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleFiveAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFiveSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (TestFiveView === 6) {\n    return <TestSix allAnswer={question} view={6} />;\n  } \n  else if (TestFiveView === 4) {\n    return <TestFour allAnswer={question} view={4} />;\n  } \n  else {\n    return null;\n   }\n};\n\nexport default TestFive;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEleven.js",["397"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestTwelve from \"./TestTwelve\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\nimport TestTen from \"./TestTen\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestEleven = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [testElevenView, setTestElevenViewView] = useState(view);\n\n  const handleElevenAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"11\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"11\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestElevenViewView(12)\n      }\n      else {\n         setTestElevenViewView(10)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (testElevenView === 11) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Double x Single Multiply (Vertical)</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"11\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleElevenAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (testElevenView === 12) {\n    return <TestTwelve allAnswer={Question} view={12} />;\n  } \n  else if (testElevenView === 10) {\n    return <TestTen allAnswer={Question} view={10} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestEleven;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwelve.js",["398"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestThirteen from \"./TestThirteen\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\nimport TestEleven from \"./TestEleven\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestTewlve = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [testTewlveView, setTestTewlveView] = useState(view);\n\n  const handleTewlveAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"12\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"12\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestTewlveView(13)\n      }\n      else {\n         setTestTewlveView(11)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (testTewlveView === 12) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Double x Double Multiply (Vertical)</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"12\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleTewlveAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (testTewlveView === 13) {\n    return <TestThirteen allAnswer={Question} view={13} />;\n  } \n  else if (testTewlveView === 11) {\n    return <TestEleven allAnswer={Question} view={11} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestTewlve;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestThirteen.js",["399","400","401"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestFourteen from \"./TestFourteen\";\nimport LayOut from \"./LayOut\";\nimport TestTewlve from './TestTwelve';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestThirteen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestThirteenView, setTestThirteenView] = useState(view);\n\n  const handleThirteenAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThirteenSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"13\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"13\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestThirteenView(14)\n      }\n      else {\n         setTestThirteenView(12);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestThirteenView === 13) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Double - Single Digit Division (w/o remainder)(H)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"13\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThirteenAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThirteenSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestThirteenView === 14) {\n    return <TestFourteen allAnswer={Question} view={14} />;\n  } \n  else if (TestThirteenView === 12) {\n    return <TestTewlve allAnswer={Question} View={12} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestThirteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFourteen.js",["402","403","404"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestFifteen from \"./TestFifteen\";\nimport LayOut from \"./LayOut\";\nimport TestThirteen from './TestThirteen';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestFourteen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestFourteenView, setTestFourteenView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"14\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"14\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestFourteenView(15)\n      }\n      else {\n         setTestFourteenView(13);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestFourteenView === 14) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Double - Single Digit Division (with remainder) (V)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"14\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestFourteenView === 15) {\n    return <TestFifteen allAnswer={Question} view={15} />;\n  } \n  else if (TestFourteenView === 13) {\n    return <TestThirteen allAnswer={Question} view={13} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestFourteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestFifteen.js",["405","406","407"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestSixteen from \"./TestSixteen\";\nimport LayOut from \"./LayOut\";\nimport TestFourteen from './TestFourteen';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestFifteen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestFifteenView, setTestFifteenView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"15\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"15\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestFifteenView(16)\n      }\n      else {\n         setTestFifteenView(14);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestFifteenView === 15) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Digit addition (100s added to 1-99)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"15\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestFifteenView === 16) {\n    return <TestSixteen allAnswer={Question} view={16} />;\n  } \n  else if (TestFifteenView === 14) {\n    return <TestFourteen allAnswer={Question} view={14} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestFifteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSixteen.js",["408","409","410"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestSeventeen from \"./TestSeventeen\";\nimport LayOut from \"./LayOut\";\nimport TestFifteen from './TestFifteen';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestSixteen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestSixteenView, setTestSixteenView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"16\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"16\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestSixteenView(17)\n      }\n      else {\n         setTestSixteenView(15);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestSixteenView === 16) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Digit subtraction (1-99 subtracted from 100s)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"16\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestSixteenView === 17) {\n    return <TestSeventeen allAnswer={Question} view={17} />;\n  } \n  else if (TestSixteenView === 15) {\n    return <TestFifteen allAnswer={Question} view={15} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestSixteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestSeventeen.js",["411","412","413"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestEighteen from \"./TestEighteen\";\nimport LayOut from \"./LayOut\";\nimport TestSixteen from './TestSixteen';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestSeventeen = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestSeventeenView, setTestSeventeenView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"17\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"17\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestSeventeenView(18)\n      }\n      else {\n         setTestSeventeenView(16);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestSeventeenView === 17) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Digit subtraction (1-99 subtracted from 100s)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"17\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestSeventeenView === 18) {\n    return <TestEighteen allAnswer={Question} view={18} />;\n  } \n  else if (TestSeventeenView === 16) {\n    return <TestSixteen allAnswer={Question} view={16} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestSeventeen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestEighteen.js",["414"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestNineteen from \"./TestNineteen\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\nimport TestSeventeen from \"./TestSeventeen\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestEighteen = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestEighteenView, setTestEighteenView] = useState(view);\n\n  const handleTewlveAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"18\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"18\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestEighteenView(19)\n      }\n      else {\n         setTestEighteenView(17)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestEighteenView === 18) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Triple x Single Multiply (Vertical)</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"18\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleTewlveAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestEighteenView === 19) {\n    return <TestNineteen allAnswer={Question} view={19} />;\n  } \n  else if (TestEighteenView === 17) {\n    return <TestSeventeen allAnswer={Question} view={17} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestEighteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestNineteen.js",["415"],[],"import { Input } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Scoreboard from \"../Scoreboard/index\";\nimport TestTwenty from \"./TestTwenty\";\nimport LayOut from \"./LayOut\";\nimport Questions from '../Questions.json';\nimport TestEighteen from \"./TestEighteen\";\n\nconst containerFourStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\nconst TestNineteen = ({ allAnswer, view }) => {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestNineteenView, setTestNineteenView] = useState(view);\n\n  const handleTewlveAnswerChange = (e, option) => {\n    let newFourQuestion = [...Questions];\n    newFourQuestion.forEach((obj) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (e.target.value === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newFourQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleFourSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"19\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newFourQuestion = Question;\n      const count = newFourQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"19\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        setTestNineteenView(20)\n      }\n      else {\n         setTestNineteenView(18)\n      }\n      setQuestion(newFourQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestNineteenView === 19) {\n    return (\n      <>\n          <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Triple x Triple Multiply (Vertical)</span>\n            </div>\n            {Questions.map((option, index) =>\n\n              option.LevelNumber === \"19\" ? (\n                <div className=\"qus\" >\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerFourStyle}>\n                    <Input\n                      variant=\"outlined\"\n                      onChange={(e) => handleTewlveAnswerChange(e, option)}\n                      style={{ margin: \"0.5rem\" }}\n                    />\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleFourSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestNineteenView === 20) {\n    return <TestTwenty allAnswer={Question} view={20} />;\n  } \n  else if (TestNineteenView === 18) {\n    return <TestEighteen allAnswer={Question} view={18} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestNineteen;","/Users/manojshakya/Documents/Public-assessment-tool/Assessment-tool/src/Components/Assesments/TestTwenty.js",["416","417","418","419"],[],"import React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport Questions from '../Questions.json';\nimport TestFour from \"./TestFour\";\nimport TestEighteen from \"./TestEighteen\";\nimport LayOut from \"./LayOut\";\nimport Scoreboard from '../Scoreboard';\nimport TestNineteen from './TestNineteen';\nconst containerThreeStyle = {\n  display: 'grid',\n  gridTemplateColumns: '1fr 1fr',\n  gap: '0.1rem',\n};\n\nconst TestTwenty = ({ allAnswer, view })=> {\n  const [Question, setQuestion] = useState(allAnswer);\n  const [TestTwentyView, setTestTwentyView] = useState(view);\n\n  const handleThreeAnswerClick = (e, a1, option) => {\n    let newThreeQuestion = Question;\n    newThreeQuestion.map((obj, index) => {\n      if (obj.LevelNumber === option.LevelNumber && obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.CorrectAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n      }\n    });\n\n    setQuestion(newThreeQuestion);\n\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');      \n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n\n  const handleThreeSubmit = () => {\n    let isAllSelected = true;\n    Question.forEach((option) => {\n      if (option.LevelNumber === \"20\" && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newThreeQuestion = Question;\n      const count = newThreeQuestion.reduce((count, Question) => {\n        if (Question.LevelNumber === \"20\" && Question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 6) {\n        alert(\"Congraulations All Level Passed\")\n        setTestTwentyView(21)\n      }\n      else {\n         setTestTwentyView(19);\n      }\n      setQuestion(newThreeQuestion);\n    } else {\n      alert(\"Please select an option for all Questions.\");\n    }\n  };\n\n   if (TestTwentyView === 20) {\n    return (\n      <>\n       <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : Triple-Double Digit Division (V)</span>\n            </div>\n            {Question.map((option, index) =>\n              option.LevelNumber === \"20\" ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.Question}</span>\n                  <div style={containerThreeStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                        onClick={(e) => handleThreeAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleThreeSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } \n  else if (TestTwentyView === 21) {\n    return <Scoreboard allAnswer={Question} view={21} />;\n  } \n  else if (TestTwentyView === 19) {\n    return <TestNineteen allAnswer={Question} view={19} />;\n  } \n  else {\n    return null;\n  }\n};\n\nexport default TestTwenty;",{"ruleId":"420","severity":1,"message":"421","line":19,"column":37,"nodeType":"422","messageId":"423","endLine":19,"endColumn":39},{"ruleId":"424","severity":1,"message":"425","line":84,"column":21,"nodeType":"426","endLine":90,"endColumn":23},{"ruleId":"420","severity":1,"message":"421","line":19,"column":37,"nodeType":"422","messageId":"423","endLine":19,"endColumn":39},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"420","severity":1,"message":"421","line":19,"column":39,"nodeType":"422","messageId":"423","endLine":19,"endColumn":41},{"ruleId":"431","severity":1,"message":"432","line":213,"column":29,"nodeType":"433","messageId":"434","endLine":213,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":220,"column":29,"nodeType":"433","messageId":"434","endLine":220,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":227,"column":29,"nodeType":"433","messageId":"434","endLine":227,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":232,"column":29,"nodeType":"433","messageId":"434","endLine":232,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":239,"column":32,"nodeType":"433","messageId":"434","endLine":239,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":246,"column":32,"nodeType":"433","messageId":"434","endLine":246,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":253,"column":31,"nodeType":"433","messageId":"434","endLine":253,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":260,"column":31,"nodeType":"433","messageId":"434","endLine":260,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":267,"column":31,"nodeType":"433","messageId":"434","endLine":267,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":274,"column":32,"nodeType":"433","messageId":"434","endLine":274,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":281,"column":32,"nodeType":"433","messageId":"434","endLine":281,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":288,"column":32,"nodeType":"433","messageId":"434","endLine":288,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":295,"column":32,"nodeType":"433","messageId":"434","endLine":295,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":302,"column":32,"nodeType":"433","messageId":"434","endLine":302,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":309,"column":32,"nodeType":"433","messageId":"434","endLine":309,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":316,"column":32,"nodeType":"433","messageId":"434","endLine":316,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":323,"column":32,"nodeType":"433","messageId":"434","endLine":323,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":330,"column":32,"nodeType":"433","messageId":"434","endLine":330,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":337,"column":32,"nodeType":"433","messageId":"434","endLine":337,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":344,"column":32,"nodeType":"433","messageId":"434","endLine":344,"endColumn":34},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"420","severity":1,"message":"421","line":19,"column":39,"nodeType":"422","messageId":"423","endLine":19,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"427","severity":1,"message":"437","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":20},{"ruleId":"420","severity":1,"message":"421","line":21,"column":39,"nodeType":"422","messageId":"423","endLine":21,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"420","severity":1,"message":"421","line":19,"column":39,"nodeType":"422","messageId":"423","endLine":19,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":19,"column":37,"nodeType":"422","messageId":"423","endLine":19,"endColumn":39},{"ruleId":"424","severity":1,"message":"425","line":84,"column":21,"nodeType":"426","endLine":90,"endColumn":23},{"ruleId":"420","severity":1,"message":"421","line":19,"column":37,"nodeType":"422","messageId":"423","endLine":19,"endColumn":39},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"420","severity":1,"message":"421","line":19,"column":39,"nodeType":"422","messageId":"423","endLine":19,"endColumn":41},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"431","severity":1,"message":"432","line":213,"column":29,"nodeType":"433","messageId":"434","endLine":213,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":220,"column":29,"nodeType":"433","messageId":"434","endLine":220,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":227,"column":29,"nodeType":"433","messageId":"434","endLine":227,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":232,"column":29,"nodeType":"433","messageId":"434","endLine":232,"endColumn":31},{"ruleId":"431","severity":1,"message":"432","line":239,"column":32,"nodeType":"433","messageId":"434","endLine":239,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":246,"column":32,"nodeType":"433","messageId":"434","endLine":246,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":253,"column":31,"nodeType":"433","messageId":"434","endLine":253,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":260,"column":31,"nodeType":"433","messageId":"434","endLine":260,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":267,"column":31,"nodeType":"433","messageId":"434","endLine":267,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":274,"column":32,"nodeType":"433","messageId":"434","endLine":274,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":281,"column":32,"nodeType":"433","messageId":"434","endLine":281,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":288,"column":32,"nodeType":"433","messageId":"434","endLine":288,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":295,"column":32,"nodeType":"433","messageId":"434","endLine":295,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":302,"column":32,"nodeType":"433","messageId":"434","endLine":302,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":309,"column":32,"nodeType":"433","messageId":"434","endLine":309,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":316,"column":32,"nodeType":"433","messageId":"434","endLine":316,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":323,"column":32,"nodeType":"433","messageId":"434","endLine":323,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":330,"column":32,"nodeType":"433","messageId":"434","endLine":330,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":337,"column":32,"nodeType":"433","messageId":"434","endLine":337,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":344,"column":32,"nodeType":"433","messageId":"434","endLine":344,"endColumn":34},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"420","severity":1,"message":"421","line":20,"column":39,"nodeType":"422","messageId":"423","endLine":20,"endColumn":41},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"428","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":18},{"ruleId":"427","severity":1,"message":"435","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":17},{"ruleId":"427","severity":1,"message":"436","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"427","severity":1,"message":"437","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":20},{"ruleId":"420","severity":1,"message":"421","line":21,"column":39,"nodeType":"422","messageId":"423","endLine":21,"endColumn":41},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Scoreboard' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Questions' is defined but never used.","'TestFour' is defined but never used.","'TestEighteen' is defined but never used."]