{"ast":null,"code":"var _jsxFileName = \"/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwo.js\",\n  _s = $RefreshSig$();\nimport { Button } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport logo from \"../../assets/Saarthi-blue.png\";\nimport TestThree from \"./TestThree\";\nimport TestOne from \"./TestOne\";\nimport LayOut from \"./LayOut\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestTwo = _ref => {\n  _s();\n  let {\n    allAnswer,\n    view\n  } = _ref;\n  const [question, setQuestion] = useState(allAnswer);\n  const [testtwoView, setTestTwoView] = useState(view);\n  const containerStyle = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: '0.1rem'\n  };\n  const handleAnswerClick = (e, a1, option) => {\n    let newQuestion = question;\n    newQuestion.map((obj, index) => {\n      if (obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.correctAnswer) {\n          obj.status = 1;\n        } else {\n          obj.status = 0;\n        }\n      }\n    });\n    setQuestion(newQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach(button => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n  const handleSubmit = () => {\n    let isAllSelected = true;\n    question.forEach(option => {\n      if (option.LevelNumber === 178 && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newQuestion = question;\n      const count = newQuestion.reduce((count, question) => {\n        if (question.LevelNumber === 178 && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n      if (count > 3) {\n        setTestTwoView(3);\n      } else {\n        setTestTwoView(1);\n      }\n      setQuestion(newQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n  if (testtwoView === 2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LayOut, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main pb-0 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"span\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"s1\",\n            children: \"Topic : What comes after\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), question.map((option, index) => option.LevelNumber === 178 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qus\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"Qus-num\",\n            children: [\"Q\", option.QuestionNumber, \" . \", option.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: containerStyle,\n            children: option.options.map((a1, optionIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"buttonStyle\",\n              onClick: e => handleAnswerClick(e, a1, option),\n              children: a1\n            }, a1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, option.correctAnswer, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this) : null), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Assessment-btn mb-5\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  } else if (testtwoView === 3) {\n    return /*#__PURE__*/_jsxDEV(TestThree, {\n      allAnswer: question,\n      view: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  } else if (testtwoView === 1) {\n    return /*#__PURE__*/_jsxDEV(TestOne, {\n      allAnswer: question,\n      view: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null;\n  }\n};\n_s(TestTwo, \"7eNKuNl+4sPN5Ie+pdgFR7FE804=\");\n_c = TestTwo;\nexport default TestTwo;\nvar _c;\n$RefreshReg$(_c, \"TestTwo\");","map":{"version":3,"names":["Button","React","useState","logo","TestThree","TestOne","LayOut","BrowserRouter","Router","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TestTwo","_ref","_s","allAnswer","view","question","setQuestion","testtwoView","setTestTwoView","containerStyle","display","gridTemplateColumns","gap","handleAnswerClick","e","a1","option","newQuestion","map","obj","index","QuestionNumber","correctAnswer","status","buttons","document","querySelectorAll","forEach","button","classList","remove","style","outline","currentTarget","add","handleSubmit","isAllSelected","LevelNumber","count","reduce","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","optionIndex","onClick","_c","$RefreshReg$"],"sources":["/Users/manojshakya/Documents/open-source-assessment-tool/src/Components/Assesments/TestTwo.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport React, { useState } from 'react';\nimport \"../../Css/style.css\";\nimport logo from \"../../assets/Saarthi-blue.png\";\nimport TestThree from \"./TestThree\";\nimport TestOne from \"./TestOne\";\nimport LayOut from \"./LayOut\";\n\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst TestTwo = ({ allAnswer, view }) => {\n  const [question, setQuestion] = useState(allAnswer);\n  const [testtwoView, setTestTwoView] = useState(view);\n\n  const containerStyle = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gap: '0.1rem',\n  };\n  const handleAnswerClick = (e, a1, option) => {\n    let newQuestion = question;\n\n    newQuestion.map((obj, index) => {\n      if (obj.QuestionNumber === option.QuestionNumber) {\n        if (a1 === obj.correctAnswer) {\n          obj.status = 1;\n        }\n        else {\n          obj.status = 0;\n        }\n\n      }\n    });\n    setQuestion(newQuestion);\n    const buttons = document.querySelectorAll('.buttonStyle');\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n      button.style.outline = 'none';\n    });\n    e.currentTarget.classList.add('selected');\n    e.currentTarget.style.outline = '2px solid green';\n  };\n  const handleSubmit = () => {\n    let isAllSelected = true;\n    question.forEach((option) => {\n      if (option.LevelNumber === 178 && option.status === '') {\n        isAllSelected = false;\n      }\n    });\n    if (isAllSelected) {\n      let newQuestion = question;\n      const count = newQuestion.reduce((count, question) => {\n        if (question.LevelNumber === 178 && question.status === 1) {\n          return count + 1;\n        }\n        return count;\n      }, 0);\n\n      if (count > 3) {\n        setTestTwoView(3)\n      }\n      else {\n        setTestTwoView(1)\n      }\n\n      setQuestion(newQuestion);\n    } else {\n      alert(\"Please select an option for all questions.\");\n    }\n  };\n  if (testtwoView === 2) {\n    return (\n      <>\n        <LayOut />\n          <div className=\"main pb-0 \">\n            <div className=\"span\">\n              <span className=\"s1\">Topic : What comes after</span>\n            </div>\n            {question.map((option, index) =>\n              option.LevelNumber === 178 ? (\n                <div className=\"qus\" key={option.correctAnswer}>\n                  <span className=\"Qus-num\">Q{option.QuestionNumber} . {option.question}</span>\n                  <div style={containerStyle}>\n                    {option.options.map((a1, optionIndex) => (\n                      <button\n                      className=\"buttonStyle\"\n                      key={optionIndex}\n                        onClick={(e) => handleAnswerClick(e, a1, option)}\n                        key={a1}\n                      >\n                        {a1}\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : null\n            )}\n            <div className=\"sub-btn\">\n              <button className=\"Assessment-btn mb-5\" onClick={handleSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n      </>\n    );\n  } else if (testtwoView === 3) {\n    return <TestThree allAnswer={question} view={3} />;\n  } else if (testtwoView === 1) {\n    return <TestOne allAnswer={question} view={1} />;\n  } else {\n    return null;\n  }\n};\n\nexport default TestTwo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}